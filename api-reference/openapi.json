{
  "openapi": "3.0.3",
  "info": {
    "title": "Figenty API",
    "version": "v1",
    "description": "API for the Figenty application.",
    "contact": {
      "name": "Figenty Support",
      "url": "https://example.com/support",
      "email": "support@figenty.com"
    }
  },
  "servers": [
    {
      "url": "https://api.figenty.com",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Invoices",
      "description": "Operations related to invoices"
    }
  ],
  "paths": {
    "/public/v1/invoices": {
      "get": {
        "tags": ["Invoices"],
        "summary": "List Invoices",
        "operationId": "listInvoices",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by invoice analysis status.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceAnalysisStatus"
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Filter by external ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Filter by file name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdDateFrom",
            "in": "query",
            "description": "Filter by creation date (from), ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdDateTo",
            "in": "query",
            "description": "Filter by creation date (to), ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedDateFrom",
            "in": "query",
            "description": "Filter by update date (from), ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedDateTo",
            "in": "query",
            "description": "Filter by update date (to), ISO 8601 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["createdAt", "updatedAt", "invoiceDate", "fileName"]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of invoices.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoicesResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Invoices"],
        "summary": "Submit a new Invoice",
        "operationId": "submitInvoice",
        "requestBody": {
          "description": "Invoice data to submit",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicInvoiceCreatePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoice submitted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicInvoiceCreateResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/public/v1/invoices/{invoiceId}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Invoice by ID",
        "operationId": "getInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "ID of the invoice to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed information about the invoice.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": ["Invoices"],
        "summary": "Update an Invoice",
        "operationId": "updateInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "ID of the invoice to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields to update for the invoice.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoicePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoice updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/public/v1/invoices/{invoiceId}/status": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Invoice Status",
        "operationId": "getInvoiceStatus",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "ID of the invoice to get status for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of the invoice.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InvoiceAnalysisStatus": {
        "type": "string",
        "description": "The analysis status of an invoice.",
        "enum": [
          "NOT_STARTED",
          "OCR_PROCESSING",
          "OCR_DONE",
          "OCR_ERROR",
          "ACCOUNTING_PROCESSING",
          "ACCOUNTING_DONE",
          "ACCOUNTING_ERROR",
          "WAITING_FOR_HUMAN",
          "SUCCESS",
          "ERROR"
        ]
      },
      "InvoiceStatusResponse": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceAnalysisStatus"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "webhookCallStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["invoiceId", "status", "updatedAt"]
      },
      "ListInvoicesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicInvoiceListItem"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "format": "int32"
              },
              "itemsPerPage": {
                "type": "integer",
                "format": "int32"
              },
              "currentPage": {
                "type": "integer",
                "format": "int32"
              },
              "totalPages": {
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "totalItems",
              "itemsPerPage",
              "currentPage",
              "totalPages"
            ]
          }
        },
        "required": ["data", "meta"]
      },
      "PublicInvoiceListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "analysisStatus": {
            "$ref": "#/components/schemas/InvoiceAnalysisStatus"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "webhookUrl": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "webhookCallStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["id", "analysisStatus", "createdAt", "updatedAt"]
      },
      "PublicInvoiceCreatePayload": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "base64File": {
            "type": "string",
            "format": "byte"
          },
          "contentType": {
            "type": "string",
            "description": "MIME type of the file (e.g., application/pdf, image/jpeg)"
          },
          "webhookUrl": {
            "type": "string",
            "format": "url"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["fileName", "base64File", "contentType", "webhookUrl"]
      },
      "PublicInvoiceCreateResponse": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": ["invoiceId", "status"]
      },
      "UpdateInvoicePayload": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "webhookUrl": {
            "type": "string",
            "format": "url",
            "nullable": true
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "ourReferenceName": {
            "type": "string",
            "nullable": true
          },
          "ourReferenceEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "ourReferencePhone": {
            "type": "string",
            "nullable": true
          },
          "theirReferenceName": {
            "type": "string",
            "nullable": true
          },
          "theirReferenceEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "theirReferencePhone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "base64File": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "analysisStatus": {
            "$ref": "#/components/schemas/InvoiceAnalysisStatus",
            "nullable": true
          },
          "analysisErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "rawAnalysisData": {
            "type": "object",
            "description": "Unstructured raw analysis data.",
            "additionalProperties": true,
            "nullable": true
          },
          "supplierId": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "nullable": true
          },
          "isEvaluationInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "goldenInvoiceFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["id", "createdAt", "updatedAt"]
      },
      "InvoiceLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exVatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vatRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "accountClassNumber": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "string"
          }
        },
        "required": ["id", "invoiceId"]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "storeStreetAddress": {
            "type": "string",
            "nullable": true
          },
          "storeZipCode": {
            "type": "string",
            "nullable": true
          },
          "storeCity": {
            "type": "string",
            "nullable": true
          },
          "storeCountry": {
            "type": "string",
            "nullable": true
          },
          "storePhone": {
            "type": "string",
            "nullable": true
          },
          "storeEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "storeVatNumber": {
            "type": "string",
            "nullable": true
          },
          "storeOrganizationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyStreetAddress": {
            "type": "string",
            "nullable": true
          },
          "companyZipCode": {
            "type": "string",
            "nullable": true
          },
          "companyCity": {
            "type": "string",
            "nullable": true
          },
          "companyCountry": {
            "type": "string",
            "nullable": true
          },
          "companyPhone": {
            "type": "string",
            "nullable": true
          },
          "companyEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "companyVatNumber": {
            "type": "string",
            "nullable": true
          },
          "companyOrganizationNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["id", "createdAt", "updatedAt"]
      },
      "ErrCode": {
        "type": "string",
        "enum": [
          "ok",
          "canceled",
          "unknown",
          "invalid_argument",
          "deadline_exceeded",
          "not_found",
          "already_exists",
          "permission_denied",
          "resource_exhausted",
          "failed_precondition",
          "aborted",
          "out_of_range",
          "unimplemented",
          "internal",
          "unavailable",
          "data_loss",
          "unauthenticated"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrCode"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true,
            "description": "Additional error details."
          }
        },
        "required": ["code", "message"]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication."
      }
    }
  }
}
